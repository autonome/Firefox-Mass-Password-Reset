<?xml version="1.0" encoding="UTF-8"?>
<!-- ***** BEGIN LICENSE BLOCK *****
  -   Version: MPL 1.1/GPL 2.0/LGPL 2.1
  -
  - The contents of this file are subject to the Mozilla Public License Version
  - 1.1 (the "License"); you may not use this file except in compliance with
  - the License. You may obtain a copy of the License at
  - http://www.mozilla.org/MPL/
  - 
  - Software distributed under the License is distributed on an "AS IS" basis,
  - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
  - for the specific language governing rights and limitations under the
  - License.
  -
  - The Original Code is Mass Password Reset.
  -
  - The Initial Developer of the Original Code is
  - Johnathan Nightingale.
  - Portions created by the Initial Developer are Copyright (C) 2008
  - the Initial Developer. All Rights Reserved.
  -
  - Contributor(s):
  -
  - Alternatively, the contents of this file may be used under the terms of
  - either the GNU General Public License Version 2 or later (the "GPL"), or
  - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
  - in which case the provisions of the GPL or the LGPL are applicable instead
  - of those above. If you wish to allow use of your version of this file only
  - under the terms of either the GPL or the LGPL, and not to allow others to
  - use your version of this file under the terms of the MPL, indicate your
  - decision by deleting the provisions above and replace them with the notice
  - and other provisions required by the GPL or the LGPL. If you do not delete
  - the provisions above, a recipient may use your version of this file under
  - the terms of any one of the MPL, the GPL or the LGPL.
  - 
  - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://masspasswordreset/skin/overlay.css" type="text/css"?>

<!DOCTYPE window [
<!ENTITY % brandDTD SYSTEM "chrome://branding/locale/brand.dtd" >
%brandDTD;
<!ENTITY % mprDTD SYSTEM "chrome://masspasswordreset/locale/masspasswordreset.dtd" >
%mprDTD;
 ]>


<dialog id="mpr-username-dialog" title="&masspasswordreset.usernamedialog.title;"
   xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
   buttons="accept,cancel"
   ondialogaccept="return doOK();"
   ondialogcancel="return true;"
   onload="onLoad();">
  
  <script type="application/javascript">
    <![CDATA[
      const Cc = Components.classes;
      const Ci = Components.interfaces;
      var pwMgr = Components.classes["@mozilla.org/login-manager;1"].
                  getService(Components.interfaces.nsILoginManager);
      var strings = Cc["@mozilla.org/intl/stringbundle;1"].
                    getService(Ci.nsIStringBundleService).
                    createBundle("chrome://masspasswordreset/locale/masspasswordreset.properties");

      function onLoad() {
        gDialog = document.documentElement;
        gUserName = document.getElementById("username");
        gNewPass = document.getElementById("newpass");
        gList = document.getElementById("entriesList");
        gDialog.getButton("accept").disabled = true;
      }

      function onInput(refilter) {
        if(refilter && gUserName.value.length > 0) {
          gMatches = [];
          pwMgr.getAllLogins({}).forEach(function(el) {
            var info = el.QueryInterface(Ci.nsILoginInfo);
            if (info.username.indexOf(gUserName.value) >= 0) {
              gMatches.push(info);
            }
          });
        }
        
        while(gList.getRowCount() > 0) { gList.removeItemAt(0); }
        
        if(gMatches.length > 0) {
          gMatches.forEach(function (e) {
            gList.appendItem(e.username + "@" + e.hostname, e);
          });
          
          gDialog.getButton("accept").disabled = gNewPass.value.length == 0;
        }
        else {
          gList.appendItem(strings.GetStringFromName("noEntries"), null);
          gDialog.getButton("accept").disabled = true;
        }
      }
      
      function doOK() {
        if (confirm(strings.formatStringFromName("confirmPasswordChange",
                                                 [gMatches.length], 1))) {
          
          var nsLoginInfo = new Components.Constructor("@mozilla.org/login-manager/loginInfo;1",
                                          Components.interfaces.nsILoginInfo,
                                          "init");
          gMatches.forEach(function (item) {
            var newItem = new nsLoginInfo(item.hostname,
                                         item.formSubmitURL,
                                         item.httpRealm,
                                         item.username,
                                         gNewPass.value, /* new password */
                                         item.usernameField,
                                         item.passwordField);
            pwMgr.modifyLogin(item, newItem);
          });
          return true;
        }
        return false;
      }
      
      function togglePasswords() {
        var hide = document.getElementById("hideCheckbox").checked;
        if (hide)
          gNewPass.setAttribute("type", "password");
        else
          gNewPass.removeAttribute("type");
      }
    ]]>
  </script>

    <stringbundle id="masspasswordreset-strings" src="chrome://masspasswordreset/locale/masspasswordreset.properties"/>
    
    <dialogheader description="&masspasswordreset.usernamedialog.description;"/>
    <hbox>
      <label value="&masspasswordreset.usernamedialog.username;"
             control="username"/>
      <textbox id="username" oninput="onInput(true);" flex="1"/>
    </hbox>
    <listbox id="entriesList" flex="1">
    </listbox>
    <hbox>
      <label value="&masspasswordreset.passworddialog.newpassword;" control="newpass"/>
      <textbox id="newpass" oninput="onInput(false);" type="password" flex="1"/>
    </hbox>
    <checkbox label="&masspasswordreset.hidepasswords;"
          id="hideCheckbox"
          checked="true"
          oncommand="togglePasswords();"/>
</dialog>
